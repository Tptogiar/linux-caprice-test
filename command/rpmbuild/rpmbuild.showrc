ARCHITECTURE AND OS:
build arch            : x86_64
compatible build archs: x86_64 noarch
build os              : Linux
compatible build os's : Linux
install arch          : x86_64
install os            : Linux
compatible archs      : x86_64 amd64 em64t athlon noarch i686 i586 i486 i386 fat
compatible os's       : Linux

RPMRC VALUES:
archcolor             : 2
optflags              : %{__global_cflags} -m64 -mtune=generic

Features supported by rpmlib:
    rpmlib(BuiltinLuaScripts) = 4.2.2-1
    rpmlib(CompressedFileNames) = 3.0.4-1
    rpmlib(ConcurrentAccess) = 4.1-1
    rpmlib(ExplicitPackageProvide) = 4.0-1
    rpmlib(FileCaps) = 4.6.1-1
    rpmlib(FileDigests) = 4.6.0-1
    rpmlib(HeaderLoadSortsTags) = 4.0.1-1
    rpmlib(PartialHardlinkSets) = 4.0.4-1
    rpmlib(PayloadFilesHavePrefix) = 4.0-1
    rpmlib(PayloadIsBzip2) = 3.0.5-1
    rpmlib(PayloadIsLzma) = 4.4.2-1
    rpmlib(PayloadIsXz) = 5.2-1
    rpmlib(ScriptletExpansion) = 4.9.0-1
    rpmlib(ScriptletInterpreterArgs) = 4.0.3-1
    rpmlib(TildeInVersions) = 4.10.0-1
    rpmlib(VersionedDependencies) = 3.0.3-1

Macro path: /usr/lib/rpm/macros:/usr/lib/rpm/macros.d/macros.*:/usr/lib/rpm/platform/%{_target}/macros:/usr/lib/rpm/fileattrs/*.attr:/usr/lib/rpm/redhat/macros:/etc/rpm/macros.*:/etc/rpm/macros:/etc/rpm/%{_target}/macros:~/.rpmmacros

========================
-14: GNAT_arches	%{ix86} x86_64 ia64 ppc ppc64 ppc64le alpha aarch64
-14: GNUconfigure(MCs:)	
  CFLAGS="${CFLAGS:-%optflags}" ; export CFLAGS; 
  LDFLAGS="${LDFLAGS:-%{-s:-s}}"  ; export LDFLAGS; 
  %{-C:_mydir="`pwd`"; %{-M: %{__mkdir} -p %{-C*};} cd %{-C*}} 
  dirs="`find ${_mydir} -name configure.in -print`"; export dirs; 
    for coin in `echo ${dirs}` 
do 
  dr=`dirname ${coin}`; 
if test -f ${dr}/NO-AUTO-GEN; then 
 : 
else 
     macrodirs=`sed -n -e 's,AM_ACLOCAL_INCLUDE((.*)),1,gp' < ${coin}`; 
    ( cd ${dr}; 
      aclocalinclude="${ACLOCAL_FLAGS}"; 
      for k in ${macrodirs}; do 
        if test -d ${k}; then 
          aclocalinclude="${aclocalinclude} -I ${k}"; 
        ##else 
        ##  echo "**Warning**: No such directory `${k}'.  Ignored." 
        fi 
      done 
      if grep "^AM_GNU_GETTEXT" configure.in >/dev/null; then 
        if grep "sed.*POTFILES" configure.in >/dev/null; then 
          : do nothing -- we still have an old unmodified configure.in 
        else 
          test -r ${dr}/aclocal.m4 || touch ${dr}/aclocal.m4; 
          echo "no" | gettextize --force --copy; 
          test -r ${dr}/aclocal.m4 && %{__chmod} u+w ${dr}/aclocal.m4; 
        fi 
      fi 
      if grep "^AM_PROG_LIBTOOL" configure.in >/dev/null; then 
        %{__libtoolize} --force --copy; 
      fi 
      aclocal ${aclocalinclude}; 
      if grep "^AM_CONFIG_HEADER" configure.in >/dev/null; then 
        %{__autoheader}; 
      fi 
      echo "Running automake --gnu ${am_opt} ..."; 
      %{__automake} --add-missing --gnu ${am_opt}; 
      %{__autoconf}; 
    ); 
  fi 
done 
  %{-C:${_mydir}}%{!-C:.}/configure --prefix=%{_prefix} --exec-prefix=%{_exec_prefix} --bindir=%{_bindir} --sbindir=%{_sbindir} --sysconfdir=%{_sysconfdir} --datadir=%{_datadir} --includedir=%{_includedir} --libdir=%{_libdir} --libexecdir=%{_libexecdir} --localstatedir=%{_localstatedir} --sharedstatedir=%{_sharedstatedir} --mandir=%{_mandir} --infodir=%{_infodir} %* ; 
  %{-C:cd ${_mydir}; unset _mydir}
-14: __7zip	/usr/bin/7za
-14: ___build_args	-e
-14: ___build_cmd	%{?_sudo:%{_sudo} }%{?_remsh:%{_remsh} %{_remhost} }%{?_remsudo:%{_remsudo} }%{?_remchroot:%{_remchroot} %{_remroot} }%{___build_shell} %{___build_args}
-14: ___build_post	exit 0
-14: ___build_pre	
  RPM_SOURCE_DIR="%{u2p:%{_sourcedir}}"
  RPM_BUILD_DIR="%{u2p:%{_builddir}}"
  RPM_OPT_FLAGS="%{optflags}"
  RPM_LD_FLAGS="%{?__global_ldflags}"
  RPM_ARCH="%{_arch}"
  RPM_OS="%{_os}"
  export RPM_SOURCE_DIR RPM_BUILD_DIR RPM_OPT_FLAGS RPM_LD_FLAGS RPM_ARCH RPM_OS
  RPM_DOC_DIR="%{_docdir}"
  export RPM_DOC_DIR
  RPM_PACKAGE_NAME="%{name}"
  RPM_PACKAGE_VERSION="%{version}"
  RPM_PACKAGE_RELEASE="%{release}"
  export RPM_PACKAGE_NAME RPM_PACKAGE_VERSION RPM_PACKAGE_RELEASE
  LANG=C
  export LANG
  unset CDPATH DISPLAY ||:
  %{?buildroot:RPM_BUILD_ROOT="%{u2p:%{buildroot}}"
  export RPM_BUILD_ROOT}
  %{?_javaclasspath:CLASSPATH="%{_javaclasspath}"
  export CLASSPATH}
  PKG_CONFIG_PATH="${PKG_CONFIG_PATH}:%{_libdir}/pkgconfig:%{_datadir}/pkgconfig"
  export PKG_CONFIG_PATH
  
  %{verbose:set -x}%{!verbose:exec > /dev/null}
  umask 022
  cd "%{u2p:%{_builddir}}"
-14: ___build_shell	%{?_buildshell:%{_buildshell}}%{!?_buildshell:/bin/sh}
-14: ___build_template	#!%{___build_shell}
%{___build_pre}
%{nil}
-14: __aclocal	aclocal
-14: __appdata_path	^%{_datadir}/appdata/.*\.appdata\.xml$
-14: __appdata_provides	%{_rpmconfigdir}/appdata.prov
-14: __ar	ar
-14: __arch_install_post	
    [ "%{buildarch}" = "noarch" ] || QA_CHECK_RPATHS=1 ; 
    case "${QA_CHECK_RPATHS:-}" in [1yY]*) /usr/lib/rpm/check-rpaths ;; esac 
    /usr/lib/rpm/check-buildroot
-14: __as	as
-14: __autoconf	autoconf
-14: __autoheader	autoheader
-14: __automake	automake
-14: __awk	gawk
-14: __bzip2	/usr/bin/bzip2
-14: __bzr	/usr/bin/bzr
-14: __cat	/usr/bin/cat
-14: __cc	gcc
-14: __check_files	%{_rpmconfigdir}/check-files %{buildroot}
-14: __chgrp	/usr/bin/chgrp
-14: __chmod	/usr/bin/chmod
-14: __chown	/usr/bin/chown
-14: __cp	/usr/bin/cp
-14: __cpio	/usr/bin/cpio
-14: __cpp	gcc -E
-14: __cxx	g++
-14: __dbi_other	mp_mmapsize=128Mb mp_size=1Mb
-14: __debug_install_post	
   %{_rpmconfigdir}/find-debuginfo.sh %{?_missing_build_ids_terminate_build:--strict-build-id} %{?_include_minidebuginfo:-m} %{?_find_debuginfo_dwz_opts} %{?_find_debuginfo_opts} "%{_builddir}/%{?buildsubdir}"
%{nil}
-14: __desktop_path	^%{_datadir}/applications/.*\.desktop$
-14: __desktop_provides	%{_rpmconfigdir}/desktop-file.prov
-14: __docdir_path	%{_datadir}/doc:%{_datadir}/man:%{_datadir}/info:%{_datadir}/gtk-doc/html:%{?_docdir}:%{?_mandir}:%{?_infodir}:%{?_javadocdir}:/usr/doc:/usr/man:/usr/info:/usr/X11R6/man
-14: __elf_flags	exeonly
-14: __elf_magic	^(setuid )?(setgid )?(sticky )?ELF (32|64)-bit.*$
-14: __elf_provides	%{_rpmconfigdir}/elfdeps --provides %{?__filter_GLIBC_PRIVATE:--filter-private}
-14: __elf_requires	%{_rpmconfigdir}/elfdeps --requires %{?__filter_GLIBC_PRIVATE:--filter-private}
-14: __file	/usr/bin/file
-14: __find_provides	/usr/lib/rpm/redhat/find-provides
-14: __find_requires	/usr/lib/rpm/redhat/find-requires
-14: __font_magic	[Ff]ont?( (program|collection))?( (text|data))
-14: __font_provides	%{_rpmconfigdir}/fontconfig.prov
-14: __font_requires	%{nil}
-14: __git	/usr/bin/git
-14: __global_cflags	-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches %{_hardened_cflags} %{_performance_cflags}
-14: __global_ldflags	-Wl,-z,relro %{_hardened_ldflags}
-14: __gpg	%{_bindir}/gpg2
-14: __gpg_check_password_cmd	%{__gpg} 
	gpg --batch --no-verbose --passphrase-fd 3 -u "%{_gpg_name}" -so -
-14: __gpg_sign_cmd	%{__gpg} 
	gpg --batch --no-verbose --no-armor --passphrase-fd 3 
	%{?_gpg_digest_algo:--digest-algo %{_gpg_digest_algo}} 
	--no-secmem-warning 
	-u "%{_gpg_name}" -sbo %{__signature_filename} %{__plaintext_filename}
-14: __grep	/usr/bin/grep
-14: __gstreamer1_path	^%{_libdir}/gstreamer-1.*/.*.so$
-14: __gstreamer1_provides	%{_rpmconfigdir}/gstreamer1.prov
-14: __gzip	/usr/bin/gzip
-14: __hg	/usr/bin/hg
-14: __id	/usr/bin/id
-14: __id_u	%{__id} -u
-14: __install	/usr/bin/install
-14: __isa	%{__isa_name}-%{__isa_bits}
-14: __isa_bits	64
-14: __isa_name	x86
-14: __javadoc_path	^%{_javadocdir}/.*
-14: __javadoc_requires	%{_rpmconfigdir}/javadoc.req
-14: __kabi_path	^/boot/symvers-.*gz$
-14: __kabi_provides	%{_rpmconfigdir}/kabi.sh
-14: __ld	/usr/bin/ld
-14: __libsymlink_exclude_path	^.*[[:digit:]]$
-14: __libsymlink_magic	^symbolic link to `.*lib.*.so..*'$
-14: __libsymlink_requires	%{_rpmconfigdir}/elfdeps --provides --soname-only
-14: __libtool_path	^%{_libdir}/.*.la$
-14: __libtool_provides	%{_rpmconfigdir}/libtooldeps.sh --provides %{buildroot} %{name}
-14: __libtool_requires	%{_rpmconfigdir}/libtooldeps.sh --requires %{buildroot} %{name}
-14: __libtoolize	libtoolize
-14: __ln_s	ln -s
-14: __lrzip	/usr/bin/lrzip
-14: __lzip	/usr/bin/lzip
-14: __lzma	%__xz --format=lzma
-14: __make	/usr/bin/make
-14: __maven_path	^%{_mavendepmapfragdir}/.*
-14: __maven_provides	%{_rpmconfigdir}/maven.prov
-14: __maven_requires	%{_rpmconfigdir}/maven.req
-14: __mkdir	/usr/bin/mkdir
-14: __mkdir_p	/usr/bin/mkdir -p
-14: __mono_magic	Mono/.Net assembly
-14: __mono_provides	%{_rpmconfigdir}/mono-find-provides %{_builddir}/%{?buildsubdir} %{buildroot} %{_libdir}
-14: __mono_requires	%{_rpmconfigdir}/mono-find-requires %{_builddir}/%{?buildsubdir} %{buildroot} %{_libdir}
-14: __mv	/usr/bin/mv
-14: __nm	/usr/bin/nm
-14: __objcopy	/usr/bin/objcopy
-14: __objdump	/usr/bin/objdump
-14: __ocaml_magic	^(Objective caml|OCaml) .*$
-14: __ocaml_provides	%{_rpmconfigdir}/ocaml-find-provides.sh
-14: __ocaml_requires	%{_rpmconfigdir}/ocaml-find-requires.sh
-14: __os_install_post	
    /usr/lib/rpm/redhat/brp-compress 
    %{!?__debug_package:
    /usr/lib/rpm/redhat/brp-strip %{__strip} 
    /usr/lib/rpm/redhat/brp-strip-comment-note %{__strip} %{__objdump} 
    } 
    /usr/lib/rpm/redhat/brp-strip-static-archive %{__strip} 
    /usr/lib/rpm/brp-python-bytecompile %{__python} %{?_python_bytecompile_errors_terminate_build} 
    /usr/lib/rpm/redhat/brp-python-hardlink 
    %{!?__jar_repack:/usr/lib/rpm/redhat/brp-java-repack-jars} 
%{nil}
-14: __osgi_path	^(.*\.jar$|((%{_libdir}|%{_datadir}).*/MANIFEST.MF))
-14: __osgi_provides	%{_rpmconfigdir}/osgi.prov
-14: __osgi_requires	%{_rpmconfigdir}/osgi.req
-14: __patch	/usr/bin/patch
-14: __perl	/usr/bin/perl
-14: __perl_check_pre	%{expand: 
%{?__spec_check_pre} 
pushd %{buildsubdir} 
%define perl_br_testdir %{buildroot}%{perl_testdir}/%{cpan_dist_name} 
%{__mkdir_p} %{perl_br_testdir} 
%{__tar} -cf - %{__perl_test_dirs} | ( cd %{perl_br_testdir} && %{__tar} -xf - ) 
find . -maxdepth 1 -type f -name '*META*' -exec %{__cp} -vp {} %{perl_br_testdir} ';' 
find %{perl_br_testdir} -type f -exec %{__chmod} -c -x {} ';' 
T_FILES=`find %{perl_br_testdir} -type f -name '*.t'` 
%fix_shbang_line $T_FILES 
%{__chmod} +x $T_FILES 
%{_fixperms} %{perl_br_testdir} 
popd 
}
-14: __perl_flags	exeonly
-14: __perl_magic	^.*[Pp]erl .*$
-14: __perl_requires	%{_rpmconfigdir}/perl.req
-14: __perllib_flags	magic_and_path
-14: __perllib_magic	^Perl[[:digit:]] module source.*
-14: __perllib_path	\.pm$
-14: __perllib_provides	%{_rpmconfigdir}/perl.prov
-14: __perllib_requires	%{_rpmconfigdir}/perl.req
-14: __pesign_cert	%{!?pe_signing_cert:-c "Red Hat Test Certificate"}%{?pe_signing_cert:-c "%{pe_signing_cert}"}
-14: __pesign_token	%{nil}%{?pe_signing_token:-t "%{pe_signing_token}"}
-14: __pkgconfig_path	^((%{_libdir}|%{_datadir})/pkgconfig/.*.pc|%{_bindir}/pkg-config)$
-14: __pkgconfig_provides	%{_rpmconfigdir}/pkgconfigdeps.sh --provides
-14: __pkgconfig_requires	%{_rpmconfigdir}/pkgconfigdeps.sh --requires
-14: __plugindir	%{_libdir}/rpm-plugins
-14: __pom_call	. /usr/share/java-utils/pom_editor.sh; pom_
-14: __psdriver_magic	^PPD file.*$
-14: __psdriver_path	^(/usr/lib/cups/driver/.*|%{_datadir}/cups/drv/.*.drv)$
-14: __psdriver_provides	%{_rpmconfigdir}/postscriptdriver.prov
-14: __pypi_default_extension	tar.gz
-14: __pypi_url	https://files.pythonhosted.org/packages/source/
-14: __python	/usr/bin/python
-14: __python2	/usr/bin/python2
-14: __python_magic	[Pp]ython.*(executable|byte-compiled)
-14: __python_path	^((/usr/lib(64)?/python[[:digit:]]\.[[:digit:]]/.*\.(py[oc]?|so))|(%{_bindir}/python[[:digit:]]\.[[:digit:]]))$
-14: __python_provides	%{_rpmconfigdir}/pythondeps.sh --provides
-14: __python_requires	%{_rpmconfigdir}/pythondeps.sh --requires
-14: __quilt	/usr/bin/quilt
-14: __ranlib	ranlib
-14: __remsh	%{__rsh}
-14: __restorecon	/sbin/restorecon
-14: __rm	/usr/bin/rm
-14: __rsh	/usr/bin/rsh
-14: __scm	patch
-14: __scm_apply_bzr(qp:m:)	
%{__patch} %{-p:-p%{-p*}} %{-q:-s}
%{__bzr} commit %{-q} -m %{-m*}
-14: __scm_apply_git(qp:m:)	
%{__git} apply --index %{-p:-p%{-p*}} -
%{__git} commit %{-q} -m %{-m*} --author "%{__scm_author}"
-14: __scm_apply_git_am(qp:m:)	
%{__git} am %{-q} %{-p:-p%{-p*}}
-14: __scm_apply_hg(qp:m:)	
%{__hg} import - %{-p:-p%{-p*}} %{-q} -m %{-m*} --user "%{__scm_author}"
-14: __scm_apply_patch(qp:m:)	
%{__patch} %{-p:-p%{-p*}} %{-q:-s}
-14: __scm_apply_quilt(qp:m:)	
%{__quilt} import %{-p:-p%{-p*}} %{1} && %{__quilt} push
-14: __scm_author	%{__scm_username} %{__scm_usermail}
-14: __scm_setup_bzr(q)	
%{__bzr} init %{-q}
%{__bzr} whoami --branch "%{__scm_author}"
%{__bzr} add .
%{__bzr} commit %{-q} -m "%{name}-%{version} base"
-14: __scm_setup_git(q)	
%{__git} init %{-q}
%{__git} config user.name "%{__scm_username}"
%{__git} config user.email "%{__scm_usermail}"
%{__git} add .
%{__git} commit %{-q} -a\
	--author "%{__scm_author}" -m "%{name}-%{version} base"
-14: __scm_setup_git_am(q)	
%{expand:%__scm_setup_git %{-q}}
-14: __scm_setup_hg(q)	
%{__hg} init %{-q} .
%{__hg} add %{-q} .
%{__hg} commit %{-q} --user "%{__scm_author}" -m "%{name}-%{version} base"
-14: __scm_setup_patch(q)	%{nil}
-14: __scm_setup_quilt(q)	%{nil}
-14: __scm_usermail	<rpm-build>
-14: __scm_username	rpm-build
-14: __script_flags	exeonly
-14: __script_magic	^.* script[, ].*$
-14: __script_requires	%{_rpmconfigdir}/script.req
-14: __sed	/usr/bin/sed
-14: __semodule	/usr/bin/semodule
-14: __spec_build_args	%{___build_args}
-14: __spec_build_body	%{___build_body}
-14: __spec_build_cmd	%{___build_cmd}
-14: __spec_build_post	%{___build_post}
-14: __spec_build_pre	%{___build_pre}
-14: __spec_build_shell	%{___build_shell}
-14: __spec_build_template	#!%{__spec_build_shell}
%{__spec_build_pre}
%{nil}
-14: __spec_check_args	%{___build_args}
-14: __spec_check_body	%{___build_body}
-14: __spec_check_cmd	%{___build_cmd}
-14: __spec_check_post	%{___build_post}
-14: __spec_check_pre	%{___build_pre}
-14: __spec_check_shell	%{___build_shell}
-14: __spec_check_template	#!%{__spec_check_shell}
%{__spec_check_pre}
%{nil}
-14: __spec_clean_args	%{___build_args}
-14: __spec_clean_body	%{___build_body}
-14: __spec_clean_cmd	%{___build_cmd}
-14: __spec_clean_post	%{___build_post}
-14: __spec_clean_pre	%{___build_pre}
-14: __spec_clean_shell	%{___build_shell}
-14: __spec_clean_template	#!%{__spec_clean_shell}
%{__spec_clean_pre}
%{nil}
-14: __spec_install_args	%{___build_args}
-14: __spec_install_body	%{___build_body}
-14: __spec_install_cmd	%{___build_cmd}
-14: __spec_install_post	
    %{?__debug_package:%{__debug_install_post}}
    %{__arch_install_post}
    %{__os_install_post}
%{nil}
-14: __spec_install_pre	%{___build_pre}
    [ "$RPM_BUILD_ROOT" != "/" ] && rm -rf "${RPM_BUILD_ROOT}"
    mkdir -p `dirname "$RPM_BUILD_ROOT"`
    mkdir "$RPM_BUILD_ROOT"
%{nil}
-14: __spec_install_shell	%{___build_shell}
-14: __spec_install_template	#!%{__spec_install_shell}
%{__spec_install_pre}
%{nil}
-14: __spec_prep_args	%{___build_args}
-14: __spec_prep_body	%{___build_body}
-14: __spec_prep_cmd	%{___build_cmd}
-14: __spec_prep_post	%{___build_post}
-14: __spec_prep_pre	%{___build_pre}
-14: __spec_prep_shell	%{___build_shell}
-14: __spec_prep_template	#!%{__spec_prep_shell}
%{__spec_prep_pre}
%{nil}
-14: __spec_rmbuild_args	%{___build_args}
-14: __spec_rmbuild_body	%{___build_body}
-14: __spec_rmbuild_cmd	%{___build_cmd}
-14: __spec_rmbuild_post	%{___build_post}
-14: __spec_rmbuild_pre	%{___build_pre}
-14: __spec_rmbuild_shell	%{___build_shell}
-14: __spec_rmbuild_template	#!%{__spec_rmbuild_shell}
%{__spec_rmbuild_pre}
%{nil}
-14: __ssh	/usr/bin/ssh
-14: __strip	/usr/bin/strip
-14: __tar	/usr/bin/tar
-14: __transaction_systemd_inhibit	%{__plugindir}/systemd_inhibit.so
-14: __unzip	/usr/bin/unzip
-14: __urlhelper_proxyopts	%{?_httpproxy:--proxy %{_httpproxy}%{?_httpport::%{_httpport}}}%{!?_httpproxy:%{nil}}
-14: __urlhelpercmd	/usr/bin/curl
-14: __urlhelperopts	--silent --show-error --fail --globoff --location -o
-14: __vsflags	0xf0000
-14: __xz	/usr/bin/xz
-14: _arch	x86_64
-14: _binaries_in_noarch_packages_terminate_build	1
-14: _binary_filedigest_algorithm	8
-14: _binary_payload	w2.xzdio
-14: _bindir	%{_exec_prefix}/bin
-14: _binfmtdir	/usr/lib/binfmt.d
-14: _build	%{_host}
-14: _build_alias	%{_host_alias}
-14: _build_arch	x86_64
-14: _build_cpu	%{_host_cpu}
-14: _build_name_fmt	%%{ARCH}/%%{NAME}-%%{VERSION}-%%{RELEASE}.%%{ARCH}.rpm
-14: _build_os	%{_host_os}
-14: _build_vendor	%{_host_vendor}
-14: _builddir	%{_topdir}/BUILD
-14: _buildrootdir	%{_topdir}/BUILDROOT
-14: _buildshell	/bin/sh
-14: _bzip2bin	%{__bzip2}
-14: _changelog_trimtime	0
-14: _cmmscolordir	%_colordir/cmms
-14: _colordir	%_datadir/color
-14: _configure	./configure
-14: _datadir	%{_datarootdir}
-14: _datarootdir	%{_prefix}/share
-14: _dbi_config	%{?__dbi_other}
-14: _dbi_config_Packages	%{?_dbi_config} lockdbfd
-14: _dbpath	%{_var}/lib/rpm
-14: _dbpath_rebuild	%{_dbpath}
-14: _default_patch_fuzz	0
-14: _defaultdocdir	%{_prefix}/share/doc
-14: _defaultlicensedir	%{_datadir}/licenses
-14: _disable_source_fetch	1
-14: _do_gconf_schema_remove	
        if test -f %{_sysconfdir}/gconf/schemas/"$schema".schemas ; then 
            export GCONF_CONFIG_SOURCE=`gconftool-2 --get-default-source` 
            gconftool-2 --makefile-uninstall-rule %{_sysconfdir}/gconf/schemas/"$schema".schemas > /dev/null || : 
        fi 
%{nil}
-14: _docdir_fmt	%%{NAME}-%%{VERSION}
-14: _dwz_limit	%{expand:%%{?%{1}_%{_arch}}%%{!?%{1}_%{_arch}:%%%{1}}}
-14: _dwz_low_mem_die_limit	10000000
-14: _dwz_low_mem_die_limit_armv5tel	4000000
-14: _dwz_low_mem_die_limit_armv7hl	4000000
-14: _dwz_max_die_limit	50000000
-14: _dwz_max_die_limit_armv5tel	10000000
-14: _dwz_max_die_limit_armv7hl	10000000
-14: _dwz_max_die_limit_x86_64	110000000
-14: _enable_debug_packages	1
-14: _exec_prefix	%{_prefix}
-14: _file_context_file	%{_sysconfdir}/selinux/${SELINUXTYPE}/contexts/files/file_contexts
-14: _file_context_file_pre	%{_localstatedir}/lib/rpm-state/file_contexts.pre
-14: _file_custom_defined_booleans	%{_selinux_store_policy_path}/rpmbooleans.custom
-14: _file_custom_defined_booleans_tmp	%{_selinux_store_policy_path}/rpmbooleans.custom.tmp
-14: _fileattrsdir	%{_rpmconfigdir}/fileattrs
-14: _filter_GLIBC_PRIVATE	0
-14: _find_debuginfo_dwz_opts	--run-dwz\
   --dwz-low-mem-die-limit %{_dwz_limit _dwz_low_mem_die_limit}\
   --dwz-max-die-limit %{_dwz_limit _dwz_max_die_limit}
-14: _fixperms	%{__chmod} -Rf a+rX,u+w,g-w,o-w
-14: _fmoddir	%{_libdir}/gfortran/modules
-14: _gnu	-gnu
-14: _gzipbin	%{__gzip}
-14: _hardened_cflags	%{?_hardened_build:%{_hardening_cflags}}
-14: _hardened_ldflags	%{?_hardened_build:%{_hardening_ldflags}}
-14: _hardening_cflags	-specs=/usr/lib/rpm/redhat/redhat-hardened-cc1
-14: _hardening_ldflags	-specs=/usr/lib/rpm/redhat/redhat-hardened-ld
-14: _hkp_keyserver	http://pgp.mit.edu
-14: _hkp_keyserver_query	%{_hkp_keyserver}:11371/pks/lookup?op=get&search=0x
-14: _host	x86_64-redhat-linux-gnu
-14: _host_alias	x86_64-redhat-linux-gnu%{nil}
-14: _host_cpu	x86_64
-14: _host_os	linux
-14: _host_vendor	redhat
-14: _icccolordir	%_colordir/icc
-14: _include_minidebuginfo	1
-14: _includedir	%{_prefix}/include
-14: _infodir	%{_prefix}/share/info
-14: _initddir	%{_sysconfdir}/rc.d/init.d
-14: _initrddir	%{_initddir}
-14: _install_langs	all
-14: _install_script_path	/sbin:/bin:/usr/sbin:/usr/bin:/usr/X11R6/bin
-14: _isa	%{?__isa:(%{__isa})}%{!?__isa:%{nil}}
-14: _javaconfdir	%{_sysconfdir}/java
-14: _javadir	%{_datadir}/java
-14: _javadocdir	%{_datadir}/javadoc
-14: _jnidir	%{_prefix}/lib/java
-14: _journalcatalogdir	/usr/lib/systemd/catalog
-14: _jvmcommondatadir	%{_datadir}/jvm-commmon
-14: _jvmcommonlibdir	%{_prefix}/lib/jvm-commmon
-14: _jvmcommonsysconfdir	%{_sysconfdir}/jvm-commmon
-14: _jvmdatadir	%{_datadir}/jvm
-14: _jvmdir	%{_prefix}/lib/jvm
-14: _jvmjardir	%{_prefix}/lib/jvm-exports
-14: _jvmlibdir	%{_prefix}/lib/jvm
-14: _jvmprivdir	%{_prefix}/lib/jvm-private
-14: _jvmsysconfdir	%{_sysconfdir}/jvm
-14: _keyringpath	%{_dbpath}/pubkeys/
-14: _lib	lib64
-14: _libdir	%{_prefix}/lib64
-14: _libexecdir	%{_exec_prefix}/libexec
-14: _libtool_ppc64le_fix	1
-14: _localstatedir	/var
-14: _mandir	%{_prefix}/share/man
-14: _mavendepmapdir	%{_sysconfdir}/maven
-14: _mavendepmapfragdir	%{_datadir}/maven-fragments
-14: _mavenpomdir	%{_datadir}/maven-poms
-14: _missing_build_ids_terminate_build	1
-14: _missing_doc_files_terminate_build	1
-14: _oldincludedir	/usr/include
-14: _os	linux
-14: _performance_cflags	%{?_performance_build:%{lua:
local tcpu = rpm.expand("%{_target_cpu}")
if string.find(tcpu, "^ppc64") then
    print("-O3")
end}}
-14: _pesign	/usr/bin/pesign
-14: _pesign_client	/usr/bin/pesign-client
-14: _pkgdocdir	%{_docdir}/%{name}-%{version}
-14: _prefix	/usr
-14: _presetdir	/usr/lib/systemd/system-preset
-14: _python_bytecompile_errors_terminate_build	1
-14: _query_all_fmt	%%{nvra}
-14: _query_selector_match	default
-14: _rpmconfigdir	%{getconfdir}
-14: _rpmdir	%{_topdir}/RPMS
-14: _rpmfilename	%{_build_name_fmt}
-14: _rpmlock_path	%{_dbpath}/.rpm.lock
-14: _rundir	/run
-14: _sbindir	%{_exec_prefix}/sbin
-14: _selinux_policy_version	3.13.1-268.el7_9.2
-14: _selinux_store_path	/etc/selinux
-14: _selinux_store_policy_path	%{_selinux_store_path}/${_policytype}
-14: _settingscolordir	%_colordir/settings
-14: _sharedstatedir	/var/lib
-14: _smp_mflags	%( 
    [ -z "$RPM_BUILD_NCPUS" ] \
        && RPM_BUILD_NCPUS="`/usr/bin/nproc 2>/dev/null || \
                             /usr/bin/getconf _NPROCESSORS_ONLN`"; \
    if [ "$RPM_BUILD_NCPUS" -gt 16 ]; then \
        echo "-j16"; \
    elif [ "$RPM_BUILD_NCPUS" -gt 3 ]; then \
        echo "-j$RPM_BUILD_NCPUS"; \
    else \
        echo "-j3"; \
    fi )
-14: _source_filedigest_algorithm	8
-14: _sourcedir	%{_topdir}/SOURCES
-14: _specdir	%{_topdir}/SPECS
-14: _srcrpmdir	%{_topdir}/SRPMS
-14: _syscolordir	%_colordir
-14: _sysconfdir	/etc
-14: _sysctldir	/usr/lib/sysctl.d
-14: _systemtap_datadir	/usr/share/systemtap
-14: _systemtap_tapsetdir	/usr/share/systemtap/tapset
-14: _sysusersdir	/usr/lib/sysusers.d
-11: _target	x86_64-linux
-14: _target_alias	%{_host_alias}
-11= _target_cpu	x86_64
-11= _target_os	linux
-14: _target_platform	%{_target_cpu}-%{_vendor}-%{_target_os}%{?_gnu}
-14: _target_vendor	%{_host_vendor}
-14: _tmpfilesdir	/usr/lib/tmpfiles.d
-14: _tmppath	%{_var}/tmp
-14: _topdir	%(echo $HOME)/rpmbuild
-14: _transaction_color	3
-14: _udevhwdbdir	/usr/lib/udev/hwdb.d
-14: _udevrulesdir	/usr/lib/udev/rules.d
-14: _unitdir	/usr/lib/systemd/system
-14: _unpackaged_files_terminate_build	1
-14: _unzipbin	%{__unzip}
-14: _urlhelper	%{__urlhelpercmd} %{?__urlhelper_localopts} %{?__urlhelper_proxyopts} %{__urlhelperopts}
-14: _use_internal_dependency_generator	1
-14: _userunitdir	/usr/lib/systemd/user
-14: _usr	/usr
-14: _usrsrc	%{_usr}/src
-14: _var	/var
-14: _vendor	redhat
-14: _vsflags_build	%{__vsflags}
-14: _vsflags_erase	%{__vsflags}
-14: _vsflags_install	%{__vsflags}
-14: _vsflags_query	%{__vsflags}
-14: _vsflags_rebuilddb	0xc0c00
-14: _vsflags_verify	%{__vsflags}
-14: add_jvm_extension	JAVA_LIBDIR=%{buildroot}%{_javadir} %{_bindir}/jvmjar -l
-14: add_maven_depmap(f:a:v:)	
set -e 
# default values 
%if %# == 0 
   _pompart="JPP-%{?scl:%{pkg_name}}%{!?scl:%{name}}.pom" 
   _jarpart="%{?scl:%{pkg_name}}%{!?scl:%{name}}.jar" 
%else 
   _pompart="%1" 
   _jarpart="%2" 
%endif 
_filelist=".mfiles%{-f*:-%{-f*}}" 
install -dm 755 %{buildroot}%{_mavendepmapfragdir} 
for _dir in %{_jnidir} %{_javajnidir} %{_javadir}; do 
    if [ -f %{buildroot}$_dir/$_jarpart ]; then 
	_jpath="%{buildroot}$_dir/$_jarpart" 
    fi 
done 
python -m /usr/share/java-utils/maven_depmap %{-a} %{-v*:-r %{-v*}} \
          -p "%{_prefix}" -n "%{?scl}" \
          %{buildroot}%{_mavendepmapfragdir}/%{?scl:%{pkg_name}}%{!?scl:%{name}}%{-f*:-%{-f*}} \
          %{buildroot}%{_mavenpomdir}/$_pompart \
%if %# == 2 
          "${_jpath}" \
%endif 
%if %# == 0 
          "${_jpath}" \
%endif 
        >> ${_filelist} 
sed -i 's:%{buildroot}::' ${_filelist} 
sort -u -o ${_filelist} ${_filelist} 

%{nil}
-14: alpha	alpha alphaev56 alphaev6 alphaev67
-14: ant	JAVA_HOME=%{java_home} ant
-14: apply_patch(qp:m:)	
%{uncompress:%{1}} | %{expand:%__scm_apply_%{__scm} %{-q} %{-p:-p%{-p*}} %{-m:-m%{-m*}}}
-14: arm	armv3l armv4b armv4l armv4tl armv5tel armv5tejl armv6l armv7l armv7hl armv7hnl
-14: autopatch(vp:)	
%{lua:
local options = rpm.expand("%{!-v:-q} %{-p:-p%{-p*}} ")
for i, p in ipairs(patches) do
    print(rpm.expand("%apply_patch -m %{basename:"..p.."}  "..options..p.."\n"))
end}
-14: autosetup(a:b:cDn:TvNS:p:)	
%setup %{-a} %{-b} %{-c} %{-D} %{-n} %{-T} %{!-v:-q}
%{-S:%global __scm %{-S*}}
%{-S:%{expand:%__scm_setup_%{-S*} %{!-v:-q}}}
%{!-N:%autopatch %{-v} %{-p:-p%{-p*}}}
-14: bcond_with	%{expand:%%{?_with_%{1}:%%global with_%{1} 1}}
-14: bcond_without	%{expand:%%{!?_without_%{1}:%%global with_%{1} 1}}
-14: binfmt_apply	
/usr/lib/systemd/systemd-binfmt %{?*} >/dev/null 2>&1 || : 
%{nil}
-14: buildroot	%{_buildrootdir}/%{name}-%{version}-%{release}.%{_arch}
-14: centos	7
-14: centos_ver	7
-14: configure	
  CFLAGS="${CFLAGS:-%optflags}" ; export CFLAGS ; 
  CXXFLAGS="${CXXFLAGS:-%optflags}" ; export CXXFLAGS ; 
  FFLAGS="${FFLAGS:-%optflags -I%_fmoddir}" ; export FFLAGS ; 
  FCFLAGS="${FCFLAGS:-%optflags -I%_fmoddir}" ; export FCFLAGS ; 
  LDFLAGS="${LDFLAGS:-%__global_ldflags}"; export LDFLAGS; 
  [ "%_libtool_ppc64le_fix" == 1 ] && [ "%_arch" == ppc64le ] && /usr/lib/rpm/redhat/libtool-handle-ppc64le.sh ; 
  for i in $(find . -name config.guess -o -name config.sub) ; do 
      [ -f /usr/lib/rpm/redhat/$(basename $i) ] && %{__rm} -f $i && %{__cp} -fv /usr/lib/rpm/redhat/$(basename $i) $i ; 
  done ; 
  %{_configure} --build=%{_build} --host=%{_host} \
	--program-prefix=%{?_program_prefix} \
	--disable-dependency-tracking \
	--prefix=%{_prefix} \
	--exec-prefix=%{_exec_prefix} \
	--bindir=%{_bindir} \
	--sbindir=%{_sbindir} \
	--sysconfdir=%{_sysconfdir} \
	--datadir=%{_datadir} \
	--includedir=%{_includedir} \
	--libdir=%{_libdir} \
	--libexecdir=%{_libexecdir} \
	--localstatedir=%{_localstatedir} \
	--sharedstatedir=%{_sharedstatedir} \
	--mandir=%{_mandir} \
	--infodir=%{_infodir}
-14: cpan_dist_name	%(eval echo %{name} | %{__sed} -e 's/^perl-//')
-14: debug_package	
%ifnarch noarch
%global __debug_package 1
%package debuginfo 
Summary: Debug information for package %{name}
Group: Development/Debug
AutoReqProv: 0
%description debuginfo
This package provides debug information for package %{name}.
Debug information is useful when developing applications that use this
package or when debugging this package.
%files debuginfo -f debugfiles.list
%defattr(-,root,root)
%endif
%{nil}
-14: defined	%{expand:%%{?%{1}:1}%%{!?%{1}:0}}
-14: dist	.el7
-14: el7	1
-14: filter_from_provides	%{expand: 
%global __filter_from_prov %{?__filter_from_prov} | %{__sed} -e '%*' 
}
-14: filter_from_requires	%{expand: 
%global __filter_from_req %{?__filter_from_req} | %{__sed} -e '%*' 
}
-14: filter_provides_in(P)	%{expand: 
%global __filter_prov_cmd %{?__filter_prov_cmd} %{__grep} -v %{-P} '%*' | 
}
-14: filter_requires_in(P)	%{expand: 
%global __filter_req_cmd %{?__filter_req_cmd} %{__grep} -v %{-P} '%*' | 
}
-14: filter_setup	%{expand: 
%global _use_internal_dependency_generator 0 
%global __deploop() while read FILE; do echo "${FILE}" | /usr/lib/rpm/rpmdeps -%{1}; done | /bin/sort -u 
%global __find_provides /bin/sh -c "%{?__filter_prov_cmd} %{__deploop P} %{?__filter_from_prov}" 
%global __find_requires /bin/sh -c "%{?__filter_req_cmd}  %{__deploop R} %{?__filter_from_req}" 
}
-14: find_lang	%{_rpmconfigdir}/find-lang.sh %{buildroot}
-14: firewalld_reload	
test -f %{_bindir}/firewall-cmd && firewall-cmd --reload --quiet || : 
%{nil}
-14: fix_shbang_line	
TMPHEAD=`mktemp`
TMPBODY=`mktemp`
for file in %* ; do 
    head -1 $file > $TMPHEAD
    tail -n +2 $file > $TMPBODY
    %{__perl} -pi -e '$f = /^#!/ ? "" : "#!%{__perl}$/"; $_="$f$_"' $TMPHEAD
    cat $TMPHEAD $TMPBODY > $file
done
%{__perl} -MExtUtils::MakeMaker -e "ExtUtils::MM_Unix->fixin(qw{%*})"
%{__rm} $TMPHEAD $TMPBODY
%{nil}
-14: gconf_schema_obsolete	
for schema in %{*} ; do 
    %_do_gconf_schema_remove 
done 
%{nil}
-14: gconf_schema_prepare	
if [ "$1" -gt 1 ] ; then 
    rm -rf %{_localstatedir}/lib/rpm-state/gconf/* 
    for schema in %{*} ; do 
        if test -f %{_sysconfdir}/gconf/schemas/"$schema".schemas ; then 
            cp -p %{_sysconfdir}/gconf/schemas/"$schema".schemas %{_localstatedir}/lib/rpm-state/gconf/ || : 
        fi 
    done 
fi 
%{nil}
-14: gconf_schema_remove	
if [ "$1" -eq 0 ] ; then 
    for schema in %{*} ; do 
        %_do_gconf_schema_remove 
    done 
fi 
%{nil}
-14: gconf_schema_upgrade	
for schema in %{*} ; do 
    if test -f %{_localstatedir}/lib/rpm-state/gconf/"$schema".schemas ; then 
        cmp --quiet %{_sysconfdir}/gconf/schemas/"$schema".schemas %{_localstatedir}/lib/rpm-state/gconf/"$schema".schemas 
        if test $? != 0; then
            export GCONF_CONFIG_SOURCE=`gconftool-2 --get-default-source` 
            gconftool-2 --makefile-uninstall-rule %{_localstatedir}/lib/rpm-state/gconf/"$schema".schemas > /dev/null || : 
            gconftool-2 --makefile-install-rule %{_sysconfdir}/gconf/schemas/"$schema".schemas > /dev/null || : 
        fi 
        rm -f %{_localstatedir}/lib/rpm-state/gconf/"$schema".schemas 
    else 
        export GCONF_CONFIG_SOURCE=`gconftool-2 --get-default-source` 
        gconftool-2 --makefile-install-rule %{_sysconfdir}/gconf/schemas/"$schema".schemas > /dev/null || : 
    fi 
done 
%{nil}
-14: ghc_arches	%{ix86} x86_64 ppc ppc64 ppc64le alpha sparcv9 armv7hl armv5tel s390 s390x aarch64
-14: ghc_arches_with_ghci	%{ix86} x86_64 ppc sparcv9 armv7hl armv5tel
-14: global	__perl_requires /usr/lib/rpm/perl.req
-14: install	%{?_enable_debug_packages:%{?buildsubdir:%{debug_package}}}
%%install
%{nil}
-14: ix86	i386 i486 i586 i686 pentium3 pentium4 athlon geode
-14: jar	%{java_home}/bin/jar
-14: java	%(. %{_javadir}-utils/java-functions; set_javacmd; echo $JAVACMD)
-14: java_home	%(. %{_javadir}-utils/java-functions; set_jvm; echo $JAVA_HOME)
-14: javac	%{java_home}/bin/javac
-14: javadoc	%{java_home}/bin/javadoc
-14: journal_catalog_update	
journalctl --update-catalog >/dev/null 2>&1 || : 
%{nil}
-14: jpackage_script	
install -d -m 755 %{buildroot}%{_bindir} 
cat > %{buildroot}%{_bindir}/%5 << EOF 
#!/bin/sh
#
# %{name} script
# JPackage Project <http://www.jpackage.org/>

# Source functions library
_prefer_jre="%{?6}"
. %{_javadir}-utils/java-functions

# Source system prefs
if [ -f %{_sysconfdir}/java/%{name}.conf ] ; then
  . %{_sysconfdir}/java/%{name}.conf
fi

# Source user prefs
if [ -f \$HOME/.%{name}rc ] ; then
  . \$HOME/.%{name}rc
fi

# Configuration
MAIN_CLASS=%1
BASE_FLAGS=%2
BASE_OPTIONS=%3
BASE_JARS="%(echo %4 | sed -e 's,:, ,g')"

# Set parameters
set_jvm
set_classpath \$BASE_JARS
set_flags \$BASE_FLAGS
set_options \$BASE_OPTIONS

# Let's start
run "\$@"
EOF
chmod 755 %{buildroot}%{_bindir}/%5
%{nil}
-14: kernel_module_package(n:v:r:s:f:xp:)	%{expand:%( 
	%global kmodtool %{-s*}%{!-s:/usr/lib/rpm/redhat/kmodtool} 
	%global kmod_version %{-v*}%{!-v:%{version}} 
	%global kmod_release %{-r*}%{!-r:%{release}} 
	%global latest_kernel %(rpm -q --qf '%{VERSION}-%{RELEASE}.%{ARCH}\\n' `rpm -qa | egrep "^kernel(-rt|-aarch64)?-devel" | /usr/lib/rpm/redhat/rpmsort -r | head -n 1` | head -n 1) 
	%{!?kernel_version:%{expand:%%global kernel_version %{latest_kernel}}} 
	%global kverrel %(%{kmodtool} verrel %{?kernel_version} 2>/dev/null) 
	flavors="default" 
	if [ -z "%*" ]; then 
		flavors_to_build=$flavors 
	elif [ -z "%{-x}" ]; then 
		flavors_to_build="%*" 
	else 
		flavors_to_build=" $flavors "
		for i in %* 
		do 
			flavors_to_build=${flavors_to_build//$i /}
		done 
	fi 
	echo "%%global flavors_to_build ${flavors_to_build:-%%nil}" 
	echo "%%global kernel_source() /usr/src/kernels/%kverrel\$([ %%%%{1} = default ] || echo ".%%%%{1}")" 
	echo "%%global kernel_module_package_moddir() extra" 
	if [ ! -z "%{-f*}" ] 
	then 
		filelist="%{-f*}" 
	fi 
	if [ ! -z "%{-p*}" ] 
	then 
		preamble="%{-p*}" 
	fi 
	if [ -z "%{kmodtool_generate_buildreqs}" ] 
	then 
		nobuildreqs="yes" 
	fi 
	override_filelist="$filelist" override_preamble="$preamble" nobuildreqs="$nobuildreqs" kmod_version=%kmod_version kmod_release=%kmod_release %{kmodtool} rpmtemplate %{-n*}%{!-n:%name} %{kverrel} $flavors_to_build 2>/dev/null 
)}
-14: kernel_module_package_buildreqs	%global kmodtool_generate_buildreqs 1 
					kernel-devel
-14: make_build	%{__make} %{?_smp_mflags}
-14: make_install	%{__make} install DESTDIR=%{?buildroot}
-14: makeinstall	
  %{__make} \
	prefix=%{?buildroot:%{buildroot}}%{_prefix} \
	exec_prefix=%{?buildroot:%{buildroot}}%{_exec_prefix} \
	bindir=%{?buildroot:%{buildroot}}%{_bindir} \
	sbindir=%{?buildroot:%{buildroot}}%{_sbindir} \
	sysconfdir=%{?buildroot:%{buildroot}}%{_sysconfdir} \
	datadir=%{?buildroot:%{buildroot}}%{_datadir} \
	includedir=%{?buildroot:%{buildroot}}%{_includedir} \
	libdir=%{?buildroot:%{buildroot}}%{_libdir} \
	libexecdir=%{?buildroot:%{buildroot}}%{_libexecdir} \
	localstatedir=%{?buildroot:%{buildroot}}%{_localstatedir} \
	sharedstatedir=%{?buildroot:%{buildroot}}%{_sharedstatedir} \
	mandir=%{?buildroot:%{buildroot}}%{_mandir} \
	infodir=%{?buildroot:%{buildroot}}%{_infodir} \
  install
-14: mono_arches	%{ix86} x86_64 sparc sparcv9 ia64 %{arm} aarch64 alpha s390x ppc ppc64 ppc64le
-14: nil	%{!?nil}
-14: nodejs_arches	%{ix86} x86_64 %{arm} aarch64 ppc64le s390x
-14: ocaml_arches	aarch64 alpha %{arm} %{ix86} ia64 x86_64 ppc ppc64 ppc64le sparc sparcv9
-11: optflags	%{__global_cflags} -m64 -mtune=generic
-14: patches	%{lua: for i, p in ipairs(patches) do print(p.." ") end}
-14: perl_archlib	%(eval "`%{__perl} -V:installarchlib`"; echo $installarchlib)
-14: perl_default_filter	%{expand: 
%global __provides_exclude_from %{perl_vendorarch}/auto/.*\\.so$|%{perl_archlib}/.*\\.so$|%{_docdir}
%global __requires_exclude_from %{_docdir}
%global __provides_exclude perl\\(VMS|perl\\(Win32|perl\\(DB\\)|perl\\(UNIVERSAL\\)
%global __requires_exclude perl\\(VMS|perl\\(Win32
}
-14: perl_default_filter_revision	3
-14: perl_default_subpackage_tests	%perl_subpackage_tests t/
-14: perl_ext_env_unset	%{expand:
unset PERL_MM_OPT MODULEBUILDRC PERL5INC
export PERL_AUTOINSTALL="--defaultdeps"
export PERL_MM_USE_DEFAULT=1
}
-14: perl_privlib	%(eval "`%{__perl} -V:installprivlib`"; echo $installprivlib)
-14: perl_sitearch	%(eval "`%{__perl} -V:installsitearch`"; echo $installsitearch)
-14: perl_sitelib	%(eval "`%{__perl} -V:installsitelib`"; echo $installsitelib)
-14: perl_subpackage_tests	%{expand: 
%global __perl_package 1
%global __perl_test_dirs %* 
%global __spec_check_pre %{expand:%{__perl_check_pre}} 
%package tests
Summary: Test suite for package %{name}
Group: Development/Debug
Requires: %{name} = %{?epoch:%{epoch}:}%{version}-%{release}
Requires: /usr/bin/prove 
%{?__tests_spkg_req:Requires: %__tests_spkg_req}
%{?__tests_spkg_prov:Provides: %__tests_spkg_prov}
AutoReqProv: 0 
%description tests
This package provides the test suite for package %{name}.
%files tests
%defattr(-,root,root,-)
%{perl_testdir}
}
-14: perl_testdir	%{_libexecdir}/perl5-tests
-14: perl_vendorarch	%(eval "`%{__perl} -V:installvendorarch`"; echo $installvendorarch)
-14: perl_vendorlib	%(eval "`%{__perl} -V:installvendorlib`"; echo $installvendorlib)
-14: perl_version	%(eval "`%{__perl} -V:version`"; echo $version)
-14: pesign(i:o:C:e:c:n:a:s)	
  if [ -x %{_pesign} ] &&  						\
       [ "%{_target_cpu}" == "x86_64" -o 				\
         "%{_target_cpu}" == "aarch64" ]; then				
    if [ "0%{?rhel}" -ge "7" -a -f /usr/bin/rpm-sign ]; then		
      nss=$(mktemp -p $PWD -d)						
      echo > ${nss}/pwfile						
      certutil -N -d ${nss} -f ${nss}/pwfile				
      certutil -A -n "ca" -t "CT,C," -i %{-a*} -d ${nss}		
      certutil -A -n "signer" -t ",c," -i %{-c*} -d ${nss}		
      sattrs=$(mktemp -p $PWD --suffix=.der)				
      %{_pesign} %{-i} -E ${sattrs} --certdir ${nss} --force		
      rpm-sign --key "%{-n*}" --rsadgstsign ${sattrs}			
      %{_pesign} -R ${sattrs}.sig -I ${sattrs} %{-i}			\
                 --certdir ${nss} -c signer %{-o}			
      rm -rf ${sattrs} ${sattrs}.sig ${nss}				
    elif [ -S /var/run/pesign/socket ]; then				
      %{_pesign_client} -t "OpenSC Card (Fedora Signer)"		\
                        -c "/CN=Fedora Secure Boot Signer"		\
                        %{-i} %{-o} %{-e} %{-s} %{-C}			
    else								
      %{_pesign} %{__pesign_token} %{__pesign_cert}			\
                 %{-i} %{-o} %{-e} %{-s} %{-C}				
    fi									
  else									
    if [ -n "%{-i*}" -a -n "%{-o*}" ]; then				
      mv %{-i*} %{-o*}							
    elif [ -n "%{-i*}" -a -n "%{-e*}" ]; then				
      touch %{-e*}							
    fi									
  fi									
  if [ ! -s %{-o} ]; then						
    if [ -e "%{-o*}" ]; then						
      rm -f %{-o*}							
    fi									
    exit 1								
  fi ;
-14: pom_add_dep	%{expand: %{__pom_call}add_dep        %*
}
-14: pom_add_dep_mgmt	%{expand: %{__pom_call}add_dep_mgmt   %*
}
-14: pom_add_parent	%{expand: %{__pom_call}add_parent     %*
}
-14: pom_add_plugin	%{expand: %{__pom_call}add_plugin     %*
}
-14: pom_disable_module	%{expand: %{__pom_call}disable_module %*
}
-14: pom_remove_dep	%{expand: %{__pom_call}remove_dep     %*
}
-14: pom_remove_parent	%{expand: %{__pom_call}remove_parent  %*
}
-14: pom_remove_plugin	%{expand: %{__pom_call}remove_plugin  %*
}
-14: pom_set_parent	%{expand: %{__pom_call}set_parent     %*
}
-14: pom_xpath_inject	%{expand: %{__pom_call}xpath_inject   %*
}
-14: pom_xpath_remove	%{expand: %{__pom_call}xpath_remove   %*
}
-14: pom_xpath_replace	%{expand: %{__pom_call}xpath_replace  %*
}
-14: pom_xpath_set	%{expand: %{__pom_call}xpath_set      %*
}
-14: power64	ppc64 ppc64p7 ppc64le
-14: py2_build	%{expand:\
  CFLAGS="%{optflags}" %{__python2} %{py_setup} %{?py_setup_args} build --executable="%{__python2} %{py2_shbang_opts}" %{?*}
  sleep 1
}
-14: py2_build_egg	%{expand:\
  CFLAGS="%{optflags}" %{__python2} %{py_setup} %{?py_setup_args} bdist_egg %{?*}
  sleep 1
}
-14: py2_build_wheel	%{expand:\
  CFLAGS="%{optflags}" %{__python2} %{py_setup} %{?py_setup_args} bdist_wheel %{?*}
  sleep 1
}
-14: py2_dist	%{lua:
        args = {}
        arg = 1
        while (true) do
                name = rpm.expand("%{?" .. arg .. ":%{" .. arg .. "}}");
                if (name == nil or name == '') then
                        break
                end
                args[arg] = name
                arg = arg + 1
        end
        for arg, name in ipairs(args) do
                canonical = rpm.expand("%py_dist_name " .. name);
                print("python2dist(" .. canonical .. ") ");
        end
}
-14: py2_install	%{expand:\
  CFLAGS="%{optflags}" %{__python2} %{py_setup} %{?py_setup_args} install -O1 --skip-build --root %{buildroot} %{?*}
}
-14: py2_install_egg	%{expand:\
  mkdir -p %{buildroot}%{python2_sitelib}
  easy_install-%{python2_version} -m --prefix %{buildroot}%{_prefix} -Z dist/*-py%{python2_version}.egg %{?*}
}
-14: py2_install_wheel	%{expand:\
  pip%{python2_version} install -I dist/%{1} --root %{buildroot} --strip-file-prefix %{buildroot} --no-deps
}
-14: py2_shbang_opts	-s
-14: py3_dist	%{lua:
        args = {}
        arg = 1
        while (true) do
                name = rpm.expand("%{?" .. arg .. ":%{" .. arg .. "}}");
                if (name == nil or name == '') then
                        break
                end
                args[arg] = name
                arg = arg + 1
        end
        for arg, name in ipairs(args) do
                canonical = rpm.expand("%py_dist_name " .. name);
                python3_version = rpm.expand("%python3_version");
                print("python" .. python3_version .. "dist(" .. canonical .. ") ");
        end
}
-14: py_build	%{expand:\
  CFLAGS="%{optflags}" %{__python} %{py_setup} %{?py_setup_args} build --executable="%{__python} %{py_shbang_opts}" %{?*}
  sleep 1
}
-14: py_build_egg	%{expand:\
  CFLAGS="%{optflags}" %{__python} %{py_setup} %{?py_setup_args} bdist_egg %{?*}
  sleep 1
}
-14: py_build_wheel	%{expand:\
  CFLAGS="%{optflags}" %{__python} %{py_setup} %{?py_setup_args} bdist_wheel %{?*}
  sleep 1
}
-14: py_byte_compile	
python_binary="%1"
buildroot_path="%2"
bytecode_compilation_path=".${buildroot_path/#$RPM_BUILD_ROOT}"
failure=0
pushd $RPM_BUILD_ROOT
find $bytecode_compilation_path -type f -a -name "*.py" -print0 | xargs -0 $python_binary -O -m py_compile || failure=1
find $bytecode_compilation_path -type f -a -name "*.py" -print0 | xargs -0 $python_binary -m py_compile || failure=1
popd
test $failure -eq 0
-14: py_dist_name	%{lua:
        name = rpm.expand("%{?1:%{1}}");
        canonical = string.gsub(string.lower(name), "[^%w%.]+", "-");
        print(canonical);
}
-14: py_install	%{expand:\
  CFLAGS="%{optflags}" %{__python} %{py_setup} %{?py_setup_args} install -O1 --skip-build --root %{buildroot} %{?*}
}
-14: py_install_egg	%{expand:\
  mkdir -p %{buildroot}%{python_sitelib}
  easy_install -m --prefix %{buildroot}%{_prefix} -Z dist/*-py%{python_version}.egg %{?*}
}
-14: py_install_wheel	%{expand:\
  pip install -I dist/%{1} --root %{buildroot} --strip-file-prefix %{buildroot} --no-deps
}
-14: py_setup	setup.py
-14: py_shbang_opts	-s
-14: pypi_source	%{lua:
    local src = rpm.expand('%1')
    local ver = rpm.expand('%2')
    local ext = rpm.expand('%3')
    local url = rpm.expand('%__pypi_url')

    -- If no first argument, try %srcname, then %pypi_name, then %name
    -- Note that rpm leaves macros unchanged if they are not defined.
    if src == '%1' then
        src = rpm.expand('%srcname')
    end
    if src == '%srcname' then
        src = rpm.expand('%pypi_name')
    end
    if src == '%pypi_name' then
        src = rpm.expand('%name')
    end

    -- If no second argument, use %version
    if ver == '%2' then
        ver = rpm.expand('%version')
    end

    -- If no third argument, use the preset default extension
    if ext == '%3' then
        ext = rpm.expand('%__pypi_default_extension')
    end

    local first = string.sub(src, 1, 1)

    print(url .. first .. '/' .. src .. '/' .. src .. '-' .. ver .. '.' .. ext)
}
-14: python2_sitearch	%(%{__python2} -c "from distutils.sysconfig import get_python_lib; print(get_python_lib(1))")
-14: python2_sitelib	%(%{__python2} -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())")
-14: python2_version	%(%{__python2} -c "import sys; sys.stdout.write('{0.major}.{0.minor}'.format(sys.version_info))")
-14: python2_version_nodots	%(%{__python2} -c "import sys; sys.stdout.write('{0.major}{0.minor}'.format(sys.version_info))")
-14: python3_pkgversion	3
-14: python_provide	%{lua:
  function string.starts(String,Start)
    return string.sub(String,1,string.len(Start))==Start
  end
  package = rpm.expand("%{?1}")
  vr = rpm.expand("%{?epoch:%{epoch}:}%{version}-%{release}")
  if (string.starts(package, "python2-")) then
    if (rpm.expand("%{?buildarch}") ~= "noarch") then
      str = "Provides: python-" .. string.sub(package,9,string.len(package)) .. "%{?_isa} = " .. vr
      print(rpm.expand(str))
    end
    print("\nProvides: python-")
    print(string.sub(package,9,string.len(package)))
    print(" = ")
    print(vr)
    --Obsoleting the previous default python package
    print("\nObsoletes: python-")
    print(string.sub(package,9,string.len(package)))
    print(" < ")
    print(vr)
  elseif (string.starts(package, "python3-")) then
    if (rpm.expand("%{?buildarch}") ~= "noarch") then
      str = "Provides: python36-" .. string.sub(package,9,string.len(package)) .. "%{?_isa} = " .. vr
      print(rpm.expand(str))
    end
    print("\nProvides: python36-")
    print(string.sub(package,9,string.len(package)))
    print(" = ")
    print(vr)
    --Obsoleting the EPEL python36 package
    print("\nObsoletes: python36-")
    print(string.sub(package,9,string.len(package)))
    print(" < ")
    print(vr)
  elseif (string.starts(package, "python36-")) then
    if (rpm.expand("%{?buildarch}") ~= "noarch") then
      str = "Provides: python3-" .. string.sub(package,10,string.len(package)) .. "%{?_isa} = " .. vr
      print(rpm.expand(str))
    end
    print("\nProvides: python3-")
    print(string.sub(package,10,string.len(package)))
    print(" = ")
    print(vr)
  elseif (rpm.expand("%{?python3_other_pkgversion}") ~= "" and string.starts(package, "python" .. rpm.expand("%{python3_other_pkgversion}") .. "-")) then
    --No unversioned provides as python3_other is not default
  elseif (string.starts(package, "pypy-")) then
    --No unversioned provides as pypy is not default
  elseif (string.starts(package, "pypy3-")) then
    --No unversioned provides as pypy is not default
  elseif (string.starts(package, "python-")) then
    --Providing the current default python
    print("Provides: python2-")
    print(string.sub(package,8,string.len(package)))
    print(" = ")
    print(vr)
  else
    print("%python_provide: ERROR: ")
    print(package)
    print(" not recognized.")
  end
}
-14: python_sitearch	%(%{__python} -c "from distutils.sysconfig import get_python_lib; import sys; sys.stdout.write(get_python_lib(1))")
-14: python_sitelib	%(%{__python} -c "from distutils.sysconfig import get_python_lib; import sys; sys.stdout.write(get_python_lib())")
-14: python_version	%(%{__python} -c "import sys; sys.stdout.write(sys.version[:3])")
-14: requires_eq	%(LC_ALL="C" echo '%*' | xargs -r rpm -q --qf 'Requires: %%{name} = %%{epoch}:%%{version}\n' | sed -e 's/ (none):/ /' -e 's/ 0:/ /' | grep -v "is not")
-14: rhel	7
-14: selinux_modules_install("s:p:")	
. /etc/selinux/config 
_policytype=%{-s*} 
if [ -z "${_policytype}" ]; then 
  _policytype="targeted" 
fi 
if [ "${SELINUXTYPE}" = "${_policytype}" ]; then 
  %{_sbindir}/semodule -n -s ${_policytype} -X %{!-p:200}%{-p*} -i %* 
  %{_sbindir}/selinuxenabled && %{_sbindir}/load_policy || : 
fi 
%{nil}
-14: selinux_modules_uninstall("s:p:")	
. /etc/selinux/config 
_policytype=%{-s*} 
if [ -z "${_policytype}" ]; then 
  _policytype="targeted" 
fi 
if [ $1 -eq 0 ]; then 
  if [ "${SELINUXTYPE}" = "${_policytype}" ]; then 
    %{_sbindir}/semodule -n -X %{!-p:200}%{-p*} -s ${_policytype} -r %* &> /dev/null || : 
    %{_sbindir}/selinuxenabled && %{_sbindir}/load_policy || : 
  fi 
fi 
%{nil}
-14: selinux_relabel_post("s:")	
. /etc/selinux/config 
_policytype=%{-s*} 
if [ -z "${_policytype}" ]; then 
  _policytype="targeted" 
fi 
if %{_sbindir}/selinuxenabled && [ "${SELINUXTYPE}" = "${_policytype}" ]; then 
   if [ -f %{_file_context_file_pre} ]; then 
     %{_sbindir}/fixfiles -C %{_file_context_file_pre} restore &> /dev/null 
     rm -f %{_file_context_file_pre} 
   fi 
fi 
%{nil}
-14: selinux_relabel_pre("s:")	
. /etc/selinux/config 
_policytype=%{-s*} 
if [ -z "${_policytype}" ]; then 
  _policytype="targeted" 
fi 
if %{_sbindir}/selinuxenabled && [ "${SELINUXTYPE}" = "${_policytype}" ]; then 
  [ -f %{_file_context_file_pre} ] || cp -f %{_file_context_file} %{_file_context_file_pre} 
fi 
%{nil}
-14: selinux_requires	
Requires: selinux-policy >= %{_selinux_policy_version} 
BuildRequires: git 
BuildRequires: pkgconfig(systemd) 
BuildRequires: selinux-policy 
BuildRequires: selinux-policy-devel 
Requires(post): selinux-policy-base >= %{_selinux_policy_version} 
Requires(post): libselinux-utils 
Requires(post): policycoreutils 
%if 0%{?fedora} || 0%{?rhel} > 7
Requires(post): policycoreutils-python-utils 
%else 
Requires(post): policycoreutils-python 
%endif 
%{nil}
-14: selinux_set_booleans("s:")	
. /etc/selinux/config 
_policytype=%{-s*} 
if [ -z "${_policytype}" ]; then 
  _policytype="targeted" 
fi 
if [ -d "%{_selinux_store_policy_path}" ]; then 
  LOCAL_MODIFICATIONS=$(%{_sbindir}/semanage boolean -E) 
  if [ ! -f %_file_custom_defined_booleans ]; then 
      /bin/echo "# This file is managed by macros.selinux-policy. Do not edit it manually" > %_file_custom_defined_booleans 
  fi 
  semanage_import='' 
  for boolean in %*; do 
      boolean_name=${boolean%=*} 
      boolean_value=${boolean#*=} 
      boolean_local_string=$(grep "$boolean_name$" <<<$LOCAL_MODIFICATIONS) 
      if [ -n "$boolean_local_string" ]; then 
          semanage_import="${semanage_import}\nboolean -m -$boolean_value $boolean_name" 
          boolean_customized_string=$(grep "$boolean_name$" %_file_custom_defined_booleans | tail -n 1) 
          if [ -n "$boolean_customized_string" ]; then 
              /bin/echo $boolean_customized_string >> %_file_custom_defined_booleans 
          else 
              /bin/echo $boolean_local_string >> %_file_custom_defined_booleans 
          fi 
      else 
          semanage_import="${semanage_import}\nboolean -m -$boolean_value $boolean_name" 
          boolean_default_value=$(LC_ALL=C %{_sbindir}/semanage boolean -l | grep "^$boolean_name " | sed 's/[^(]*([^,]*, *\(on\|off\).*/\1/') 
          /bin/echo "boolean -m --$boolean_default_value $boolean_name" >> %_file_custom_defined_booleans 
      fi 
  done; 
  if %{_sbindir}/selinuxenabled && [ "${SELINUXTYPE}" = "${_policytype}" ]; then 
      /bin/echo -e "$semanage_import" | %{_sbindir}/semanage import -S "${_policytype}" 
  elif test -d /usr/share/selinux/"${_policytype}"/base.lst; then 
      /bin/echo -e "$semanage_import" | %{_sbindir}/semanage import -S "${_policytype}" -N 
  fi 
fi 
%{nil}
-14: selinux_unset_booleans("s:")	
. /etc/selinux/config 
_policytype=%{-s*} 
if [ -z "${_policytype}" ]; then 
  _policytype="targeted" 
fi 
if [ -d "%{_selinux_store_policy_path}" ]; then 
  semanage_import='' 
  for boolean in %*; do 
      boolean_name=${boolean%=*} 
      boolean_customized_string=$(grep "$boolean_name$" %_file_custom_defined_booleans | tail -n 1) 
      if [ -n "$boolean_customized_string" ]; then 
          awk "/$boolean_customized_string/ && !f{f=1; next} 1" %_file_custom_defined_booleans > %_file_custom_defined_booleans_tmp && mv %_file_custom_defined_booleans_tmp %_file_custom_defined_booleans 
          if ! grep -q "$boolean_name$" %_file_custom_defined_booleans; then 
              semanage_import="${semanage_import}\n${boolean_customized_string}" 
          fi 
      fi 
  done; 
  if %{_sbindir}/selinuxenabled && [ "${SELINUXTYPE}" = "${_policytype}" ]; then 
      /bin/echo -e "$semanage_import" | %{_sbindir}/semanage import -S "${_policytype}" 
  elif test -d /usr/share/selinux/"${_policytype}"/base.lst; then 
      /bin/echo -e "$semanage_import" | %{_sbindir}/semanage import -S "${_policytype}" -N 
  fi 
fi 
%{nil}
-14: sources	%{lua: for i, s in ipairs(sources) do print(s.." ") end}
-14: sparc	sparc sparcv8 sparcv9 sparcv9v sparc64 sparc64v
-14: sysctl_apply	
/usr/lib/systemd/systemd-sysctl %{?*} >/dev/null 2>&1 || : 
%{nil}
-14: systemd_post	
if [ $1 -eq 1 ] ; then 
        # Initial installation 
        systemctl preset %{?*} >/dev/null 2>&1 || : 
fi 
%{nil}
-14: systemd_postun	
systemctl daemon-reload >/dev/null 2>&1 || : 
%{nil}
-14: systemd_postun_with_restart	
systemctl daemon-reload >/dev/null 2>&1 || : 
if [ $1 -ge 1 ] ; then 
        # Package upgrade, not uninstall 
        systemctl try-restart %{?*} >/dev/null 2>&1 || : 
fi 
%{nil}
-14: systemd_preun	
if [ $1 -eq 0 ] ; then 
        # Package removal, not upgrade 
        systemctl --no-reload disable %{?*} > /dev/null 2>&1 || : 
        systemctl stop %{?*} > /dev/null 2>&1 || : 
fi 
%{nil}
-14: systemd_requires	
Requires(post): systemd 
Requires(preun): systemd 
Requires(postun): systemd 
%{nil}
-14: systemd_user_post	%{expand:%systemd_post \--global %%{?*}}
-14: systemd_user_postun	%{nil}
-14: systemd_user_postun_with_restart	%{nil}
-14: systemd_user_preun	
if [ $1 -eq 0 ] ; then 
        # Package removal, not upgrade 
        systemctl --global disable %{?*} > /dev/null 2>&1 || : 
fi 
%{nil}
-14: sysusers_create	
systemd-sysusers %{?*} >/dev/null 2>&1 || : 
%{nil}
-14: sysusers_create_inline	
echo %{?*} | systemd-sysusers - >/dev/null 2>&1 || : 
%{nil}
-14: tests_req	%{expand:
BuildRequires: %*
%%tests_subpackage_requires %*
}
-14: tests_subpackage_provides	%{expand: 
%global __tests_spkg_prov %{?__tests_spkg_prov} %* 
}
-14: tests_subpackage_requires	%{expand: 
%global __tests_spkg_req %{?__tests_spkg_req} %* 
}
-14: tmpfiles_create	
systemd-tmpfiles --create %{?*} >/dev/null 2>&1 || : 
%{nil}
-14: udev_hwdb_update	
udevadm hwdb --update >/dev/null 2>&1 || : 
%{nil}
-14: udev_rules_update	
udevadm control --reload >/dev/null 2>&1 || : 
%{nil}
-14: undefined	%{expand:%%{?%{1}:0}%%{!?%{1}:1}}
-14: with	%{expand:%%{?with_%{1}:1}%%{!?with_%{1}:0}}
-14: without	%{expand:%%{?with_%{1}:0}%%{!?with_%{1}:1}}
======================== active 512 empty 0
